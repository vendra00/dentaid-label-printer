// CHECKSTYLE:FileLength:off (reason: generated)
// CHECKSTYLE:LineLength:off (reason: generated)
// CHECKSTYLE:MethodLength:off (reason: generated)
package com.rockwell.mes.myeig.model;

/**
 * This file is generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */

import java.util.List;

import com.datasweep.compatibility.client.ATRow;
import com.datasweep.compatibility.client.AccessPrivilege;
import com.datasweep.compatibility.client.DatasweepException;
import com.datasweep.compatibility.client.Response;
import com.datasweep.compatibility.client.Server;
import com.datasweep.compatibility.ui.Time;
import com.rockwell.mes.commons.base.ifc.objects.MESATObject;

/**
 * Generated class definition for application table MY_EigPersistentObjects.
 * Application table description: null
 */
public class MESGeneratedMyEigPersistentObjects extends MESATObject {

    /** Generated attribute definition */
    public static final String ATDEFINITION_NAME = "MY_EigPersistentObjects";

    /** Generated column name */
    public static final String COL_NAME_OBJECTBLOB = "objectBlob";

    /** Generated column name */
    public static final String COL_NAME_OBJECTID = "objectID";

    /** Generated column name */
    public static final String COL_NAME_TABLENAME = "tableName";

    /** Generated property name */
    public static final String PROP_NAME_OBJECTBLOB = "objectBlob";

    /** Generated property name */
    public static final String PROP_NAME_OBJECTID = "objectID";

    /** Generated property name */
    public static final String PROP_NAME_TABLENAME = "tableName";

    /**
     * Generated method definition
     *
     * @return The name of the application table.
     */
    public String getATDefinitionName() {
        return ATDEFINITION_NAME;
    }

    /**
     * Generated constructor
     *
     * @param key The key of the ATRow to load.
     */
    public MESGeneratedMyEigPersistentObjects(long key) {
        super(key);
    }

    /**
     * Generated copy constructor
     *
     * @param source The source to copy.
     */
    public MESGeneratedMyEigPersistentObjects(MESGeneratedMyEigPersistentObjects source) {
        super(source);
    }

    /**
     * Generated constructor
     *
     * @param baseATRow The ATRow to wrap.
     */
    public MESGeneratedMyEigPersistentObjects(ATRow baseATRow) {
        super(baseATRow);
    }

    /**
     * Generated default constructor
     */
    public MESGeneratedMyEigPersistentObjects() {
        super();
    }

    /**
     * Generated method definition
     *
     * @param server The Server object
     * @return the filter object
     */
    public static MESMyEigPersistentObjectsFilter createFilter(Server server) {
        return new MESMyEigPersistentObjectsFilter(server);
    }

    /**
     * Generated method definition
     *
     * @return the filter object
     */
    public static MESMyEigPersistentObjectsFilter createFilter() {
        return new MESMyEigPersistentObjectsFilter();
    }

    /**
     * Generated method definition
     *
     * @param filter the Filter object
     * @return the list of the objects
     */
    public static List<MESMyEigPersistentObjects> getFilteredObjects(MESMyEigPersistentObjectsFilter filter) {
        return MESATObject.getFilteredMESATObjectList(filter, MESMyEigPersistentObjects.class);
    }

    @Override
    public boolean refresh() {
        boolean ok = super.refresh();
        if (!ok) {
            return false;
        }

        return true;
    }    

    /**
     * Generated getter for column objectBlob.
     * Column description: 
     *
     * @return the requested value
     */
    public byte[] getObjectBlob() {
        return (byte[]) this.dgtATRow.getValue(COL_NAME_OBJECTBLOB);
    }

    /**
     * Generated setter for column objectBlob.
     * Column description: 
     *
     * @param value The new value to be assigned
     */
    public void setObjectBlob(byte[] value) {
        byte[] oldValue = this.getObjectBlob();
        this.dgtATRow.setValue(COL_NAME_OBJECTBLOB, value);
        pcs.firePropertyChange(PROP_NAME_OBJECTBLOB, oldValue, value);
    }

    /**
     * Generated getter for column objectID.
     * Column description: 
     *
     * @return the requested value
     */
    public Long getObjectID() {
        return (Long) this.dgtATRow.getValue(COL_NAME_OBJECTID);
    }

    /**
     * Generated setter for column objectID.
     * Column description: 
     *
     * @param value The new value to be assigned
     */
    public void setObjectID(Long value) {
        Long oldValue = this.getObjectID();
        this.dgtATRow.setValue(COL_NAME_OBJECTID, value);
        pcs.firePropertyChange(PROP_NAME_OBJECTID, oldValue, value);
    }

    /**
     * Generated getter for column tableName.
     * Column description: 
     *
     * @return the requested value
     */
    public String getTableName() {
        return (String) this.dgtATRow.getValue(COL_NAME_TABLENAME);
    }

    /**
     * Generated setter for column tableName.
     * Column description: 
     *
     * @param value The new value to be assigned
     */
    public void setTableName(String value) {
        String oldValue = this.getTableName();
        this.dgtATRow.setValue(COL_NAME_TABLENAME, value);
        pcs.firePropertyChange(PROP_NAME_TABLENAME, oldValue, value);
    }

    // CHECKSTYLE:MethodNameCheck:off
    /**
     * Generated method definition
     *
     * {@inheritDoc} Overloaded save method from the super class.
     */
    public void Save(Time time, String comment, AccessPrivilege accessPrivilege) throws DatasweepException {
        // Check if attached reference is valid:
        Response res = new Response();
        if (res.isError()) {
            throw new DatasweepException(res);
        }
        // okay, save here.
        super.Save(time, comment, accessPrivilege);
    }
    // CHECKSTYLE:MethodNameCheck:on

}
